/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// include all of the new mouse things

#include <behaviors/mouse_keys.dtsi>

// include all of the new mouse things

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define SYM_L    3
#define NUM_L    4
#define ADJ_L    5
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)

/ {
    combos {
        compatible = "zmk,combos";

        navon {
            bindings = <&tog 4>;
            key-positions = <7 8 9>;
        };

        gameon {
            bindings = <&tog 7>;
            key-positions = <1 2 3 4>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <19 20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | TAB   |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |  A  |  S  |  D  |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | SHIFT |   s/Z   |   c/X   |   a/C   |   V   |   B   | CAPS  |-------------------|  ESC  |   N   |   M   |   ,   |   .   |   /   | SHIFT |
 * ----------------| CTRL  |-------|  ESC  |  ALT  | Sym  |  SPACE |---|  Num  | ENTER |  ALT  |  GUI  |-------|   '   |----------------
 */

            bindings = <
&kp TAB    &kp Q         &kp W        &kp E       &kp R    &kp T                                                 &kp Y     &kp U     &kp I           &kp O          &kp P             &kp BSPC
&kp GRAVE  &kp A         &kp S        &kp D       &kp F    &lt 6 G                                               &lt 3 H   &kp J     &kp K           &kp L          &kp SEMI          &kp SQT
&kp LSHFT  &mt LSHIFT Z  &mt LCTRL X  &mt LALT C  &lt 8 V  &kp B     &kp CAPS                         &kp ESC    &kp N     &kp M     &mt LALT COMMA  &mt LCTRL DOT  &mt LSHIFT SLASH  &kp ESC
                         &kp LCTRL                &kp ESC  &kp LALT  &mo NUM_L  &kp SPACE  &kp ENTER  &mo SYM_L  &kp LALT  &kp RGUI                  &kp SQT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        dvorak_layer {
            /* DVORAK
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   '   |   ,   |   .   |   P   |   Y   |-----------------------------------|   F   |   G   |   C   |   R   |   L   | BKSPC |
 * | TAB   |   A   |   O   |   E   |   U   |   I   |-----------------------------------|   D   |   H   |   T   |   N   |   S   | ENTER |
 * | SHIFT |   ;   |   Q   |   J   |   K   |   X   | CAPS  |-------------------|  ESC  |   B   |   M   |   W   |   V   |   Z   | SHIFT |
 * ----------------| CTRL  |-------|  GUI  |  ALT  | SPACE |  Sym  |---|  Num  | SPACE |  ALT  |  GUI  |-------|   /   |----------------
 */

            bindings = <
&kp GRAVE  &kp SQT   &kp COMMA  &kp DOT  &kp P     &kp Y                                                 &kp F     &kp G     &kp C  &kp R      &kp L  &kp BSPC
&kp TAB    &kp A     &kp O      &kp E    &kp U     &kp I                                                 &kp D     &kp H     &kp T  &kp N      &kp S  &kp ENTER
&kp LSHFT  &kp SEMI  &kp Q      &kp J    &kp K     &kp X     &kp CAPS                         &kp ESC    &kp B     &kp M     &kp W  &kp V      &kp Z  &kp RSHFT
                     &kp LCTRL           &kp LGUI  &kp LALT  &kp SPACE  &mo SYM_L  &mo NUM_L  &kp SPACE  &kp LALT  &kp RGUI         &kp SLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        colemak_layer {
            /* COLEMAK-DH
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   F   |   P   |   B   |-----------------------------------|   J   |   L   |   U   |   Y   |   ;   | BKSPC |
 * | TAB   |   A   |   R   |   S   |   T   |   G   |-----------------------------------|   M   |   N   |   E   |   I   |   O   | ENTER |
 * | SHIFT |   Z   |   X   |   C   |   D   |   V   | CAPS  |-------------------|  ESC  |   K   |   H   |   ,   |   .   |   /   | SHIFT |
 * ----------------| CTRL  |-------|  GUI  |  ALT  | SPACE |  Sym  |---|  Num  | SPACE |  ALT  |  GUI  |-------|   '   |----------------
 */

            bindings = <
&kp GRAVE  &kp Q  &kp W      &kp F  &kp P     &kp B                                                 &kp J     &kp L     &kp U      &kp Y    &kp SEMI   &kp BSPC
&kp TAB    &kp A  &kp R      &kp S  &kp T     &kp G                                                 &kp M     &kp N     &kp E      &kp I    &kp O      &kp ENTER
&kp LSHFT  &kp Z  &kp X      &kp C  &kp D     &kp V     &kp CAPS                         &kp ESC    &kp K     &kp H     &kp COMMA  &kp DOT  &kp SLASH  &kp RSHFT
                  &kp LCTRL         &kp LGUI  &kp LALT  &kp SPACE  &mo SYM_L  &mo NUM_L  &kp SPACE  &kp LALT  &kp RGUI             &kp SQT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        sym_layer {
            /* SYM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | HOME  |   !   |   @   |   #   |   $   |   %   |-----------------------------------|   ^   |   &   |   *   |   (   |   )   | BSPC  |
 * | END   |  GUI  |  Alt  | Ctrl  | Shift | Pg Up |-----------------------------------|   -   |   =   |   [   |   ]   |   \   | ENTER |
 * | Shift |  UnDo |  Cut  | Copy  | Paste | Pg Dn |OsAltGr|-------------------| MENU  |   _   |   +   |   {   |   }   |   |   | SHIFT |
 * ----------------|       |-------|       |       |       |       |---| ADJ_L |       |       |       |-------| CTRL  |----------------
 */

            bindings = <
&kp HOME  &kp EXCL          &kp AT             &kp HASH              &kp DOLLAR             &kp PERCENT                                          &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR  &trans
&kp END   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PG_UP                                            &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &kp BSLH  &trans
&trans    &kp Undo          &kp Cut            &kp Copy              &kp COLON              &kp PG_DN    &sk RALT                     &kp K_APP  &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC   &kp PIPE  &trans
                            &kp GRAVE                                &trans                 &trans       &trans    &trans  &mo ADJ_L  &trans     &trans     &trans                &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        num_layer {
            /* NUM   
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | F11   |   1   |   2   |   3   |   4   |   5   |-----------------------------------|   6   |   7   |   8   |   9   |       | BSPC  |
 * | F12   |  F1   |  F2   |  F3   |  F4   |  F5   |-----------------------------------| Left  | Down  |  Up   | Right | GUI   | ENTER |
 * | Shift |  F6   |  F7   |  F8   |  F9   |  F10  |  INS  |-------------------| MUTE  |VOL DN | VOL UP| BRI DN | BRI_UP | PERIOD | DELETE|
 * ----------------|       |-------|       |       |       | ADJ_L |---|       |       |       |       |-------| CTRL  |----------------
 */

            bindings = <
&kp F11  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                           &kp N6    &kp N7         &kp N8       &kp N9     &kp N0           &trans
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                           &kp LEFT  &kp UP         &kp DOWN     &kp RIGHT  &kp C_VOLUME_UP  &kp C_BRI_UP
&trans   &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp INS                     &kp C_MUTE  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &kp C_VOL_DN     &kp C_BRI_DN
                 &trans          &trans  &trans   &trans   &mo ADJ_L  &trans  &kp SPACE   &trans    &trans                      &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adj_layer {
            /* ADJUST
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |       | QWERTY| DVORAK| COLEMK|       |       |-----------------------------------|       |Prt Scr|       | EP_OFF| EP_ON |       |
 * |       | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |-----------------------------------|       |       |       |       |       |       |
 * | BOOTL | RESET |       |OUT_USB|OUT_BLE|       |BT CLR |-------------------|       |       |       |       |       |       | SHIFT |
 * ----------------|       |-------|       |       |       |       |---|       |       |       |       |-------| CTRL  |----------------
 */

            bindings = <
&none        &to QWERTY_L  &to DVORAK_L  &to COLEMK_L  &none         &bt BT_CLR_ALL                                      &none   &kp PRINTSCREEN  &none  &ext_power EP_OFF  &ext_power EP_ON  &bt BT_CLR_ALL
&none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                        &none   &none            &none  &none              &none             &none
&bootloader  &sys_reset    &none         &out OUT_USB  &out OUT_BLE  &none           &bt BT_CLR                  &none   &none   &none            &none  &none              &none             &trans
                           &trans                      &trans        &trans          &trans      &trans  &trans  &trans  &trans  &trans                  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        num9square {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &kp TAB  &kp N7  &kp N8  &kp N9  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &none    &kp N4  &kp N5  &kp N6  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans  &none    &kp N1  &kp N2  &kp N3  &kp DOT  &kp DOT
                &trans          &trans  &trans  &trans  &trans  &trans  &trans  &kp N0   &kp N0          &trans
            >;
        };

        game {
            bindings = <
&kp ESC   &kp TAB    &kp Q  &kp W  &kp E  &kp R                                           &trans  &trans  &trans  &trans  &trans  &trans
&kp RET   &kp LSHFT  &kp A  &kp S  &kp D  &kp F                                           &trans  &trans  &trans  &trans  &trans  &trans
&kp BSPC  &kp G      &kp Z  &kp X  &kp C  &kp V     &trans                        &trans  &trans  &trans  &trans  &trans  &trans  &trans
                     &none         &none  &kp LALT  &kp LCTRL  &kp SPACE  &trans  &trans  &trans  &trans          &trans
            >;
        };

        mousenav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &mkp MB2        &mmv MOVE_UP    &mkp MCLK        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                     &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                     &trans  &trans  &trans          &trans          &trans           &trans  &trans
                &trans          &trans  &trans  &trans  &trans  &mkp LCLK  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
